<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Yohann&#39;s blog</title>
<link>https://ymansiaux.github.io/yohann-data/#category=R</link>
<atom:link href="https://ymansiaux.github.io/yohann-data/index-r.xml" rel="self" type="application/rss+xml"/>
<description>Yohann Mansiaux&#39;s blog - R, dev and other stuff</description>
<generator>quarto-1.5.56</generator>
<lastBuildDate>Tue, 05 Nov 2024 23:00:00 GMT</lastBuildDate>
<item>
  <title>Include a demo dataset in a R package (video tutorial)</title>
  <dc:creator>Yohann Mansiaux</dc:creator>
  <link>https://ymansiaux.github.io/yohann-data/posts/datainpkgs_video/</link>
  <description><![CDATA[ 





<p>Didn‚Äôt have time to read <a href="https://ymansiaux.github.io/yohann-data/posts/datainpkgs/">my article on adding data to an R package</a>?</p>
<p>Don‚Äôt worry! Here‚Äôs a short video to sum it all up:</p>
<div class="quarto-video"><video id="video_shortcode_videojs_video1" class="video-js vjs-default-skin vjs-fluid" controls="" preload="auto" data-setup="{}" title=""><source src="img/include_data_in_a_package_EN.mp4"></video></div>
<p>Enjoy üçø</p>



 ]]></description>
  <category>development</category>
  <category>package</category>
  <category>R</category>
  <category>video</category>
  <guid>https://ymansiaux.github.io/yohann-data/posts/datainpkgs_video/</guid>
  <pubDate>Tue, 05 Nov 2024 23:00:00 GMT</pubDate>
  <media:content url="https://ymansiaux.github.io/yohann-data/posts/datainpkgs_video/image.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Beyond Functions: How to Enrich an R Package with Data</title>
  <dc:creator>Yohann Mansiaux</dc:creator>
  <link>https://ymansiaux.github.io/yohann-data/posts/datainpkgs/</link>
  <description><![CDATA[ 





<p><strong>As package developers, we often focus on custom functions, their documentation, and unit testing. To provide a more complete user experience, it can be helpful to include data within the package. Here‚Äôs everything you need to know!</strong></p>
<section id="short-on-time-heres-the-gist" class="level2">
<h2 class="anchored" data-anchor-id="short-on-time-heres-the-gist">Short on time? Here‚Äôs the gist</h2>
<p>In this article, we present the different ways to incorporate data (broadly defined) into an R package. We cover the three directories used for storing data and explain how to access them, whether you are a package user or a developer. Finally, we discuss best practices for documenting these data.</p>
</section>
<section id="why-include-data-in-a-package" class="level2">
<h2 class="anchored" data-anchor-id="why-include-data-in-a-package">Why Include Data in a Package?</h2>
<p>Including data in a package can be useful for several reasons:</p>
<ul>
<li><strong>Simplifying package usage</strong>: The data included in the package is directly accessible to users.</li>
<li><strong>Facilitating reproducibility</strong>: The data allows users to replicate the examples provided in the documentation.</li>
<li><strong>Enhancing unit testing</strong>: The included data can be used for testing the package functions.</li>
<li><strong>Sharing information</strong>: Distributing documentation, scientific articles, code samples, etc.</li>
</ul>
<p>Here, ‚Äúdata‚Äù should be interpreted broadly. It includes tabular data typically used in R (e.g., CSV or XLSX files, or <code>data.frame</code> objects), but also images, configuration files, articles, code samples, etc.</p>
</section>
<section id="data-directories-in-an-r-package" class="level2">
<h2 class="anchored" data-anchor-id="data-directories-in-an-r-package">Data Directories in an R Package</h2>
<p>There are three directories in an R package used to store data: <code>data-raw/</code>, <code>data/</code>, and <code>inst/</code>, each serving a specific purpose and catering to different audiences (developers vs.&nbsp;users).</p>
<section id="the-data-raw-and-data-pair" class="level3">
<h3 class="anchored" data-anchor-id="the-data-raw-and-data-pair">The <code>data-raw/</code> and <code>data/</code> Pair</h3>
<p>The goal here is to make data available to package users, which can be used by the package‚Äôs functions or included in the documentation examples. These data will be represented as <strong>R objects</strong> (e.g., <code>data.frame</code>, list, etc.).</p>
</section>
<section id="the-inst-directory" class="level3">
<h3 class="anchored" data-anchor-id="the-inst-directory">The <code>inst/</code> Directory</h3>
<p>This directory allows you to store files without format restrictions: tabular files, code sample scripts, notebooks in Rmd/Qmd format, PDF documentation, etc. There are no limits.</p>
</section>
</section>
<section id="using-data-raw-data" class="level2">
<h2 class="anchored" data-anchor-id="using-data-raw-data">Using <code>data-raw/</code> + <code>data/</code></h2>
<p><strong>Use case</strong>: You want to make data available to package users that can be used by the package‚Äôs functions. The goal is to provide native access from the package‚Äôs functions. You‚Äôre probably familiar with preloaded datasets in R like <code>mtcars</code> or <code>iris</code>; this follows the same principle.</p>
<section id="data-raw" class="level3">
<h3 class="anchored" data-anchor-id="data-raw"><code>data-raw/</code></h3>
<p>The <code>data-raw/</code> folder is used to store scripts for preparing the data. Files in this folder are not included in the final package installed on the user‚Äôs computer but contain the code needed to generate the datasets that will later be included in the package.</p>
</section>
<section id="data" class="level3">
<h3 class="anchored" data-anchor-id="data"><code>data/</code></h3>
<p>Once prepared in <code>data-raw/</code>, the data is stored in the <code>data/</code> folder. Files in this folder are included in the final package and are accessible to users. The files are stored in <code>.rda</code> format and are loaded when a user runs <code>library(mypackage)</code>.</p>
<p><img src="https://ymansiaux.github.io/yohann-data/posts/datainpkgs/img/1-dataraw_data_en.png" class="img-fluid"></p>
</section>
<section id="example" class="level3">
<h3 class="anchored" data-anchor-id="example">Example</h3>
<ol type="1">
<li><p>Create the <code>data-raw/</code> folder using the command <code>usethis::use_data_raw("my_dataset_demo")</code>. This command creates a <code>my_dataset_demo.R</code> file in the <code>data-raw/</code> folder.</p></li>
<li><p>Prepare the dataset in the <code>my_dataset_demo.R</code> file:</p></li>
</ol>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a sample of the "starwars" dataset from the dplyr package</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># See https://github.com/tidyverse/dplyr/tree/main/data-raw and https://github.com/tidyverse/dplyr/tree/main/data</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(readr)</span>
<span id="cb1-5">starwars_raw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data-raw/starwars.csv"</span>)</span>
<span id="cb1-6">starwars_sample <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> starwars_raw <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb1-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample_n</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb1-8">usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use_data</span>(starwars_sample, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">overwrite =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
<ol start="3" type="1">
<li><p>After running the command <code>usethis::use_data(starwars_sample, overwrite = TRUE)</code>, you‚Äôll see a file named <code>starwars_sample.rda</code> in the <code>data/</code> folder.</p></li>
<li><p>There‚Äôs still some work to do: now we need to document the dataset. For this, we will use the <code>{checkhelper}</code> package.</p></li>
</ol>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">checkhelper<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use_data_doc</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"starwars_sample"</span>)</span></code></pre></div>
<p>This creates a <code>doc_starwars_sample.R</code> file in the package‚Äôs <code>R/</code> folder. The file contains the dataset‚Äôs documentation. You can now edit this file to add more information about the dataset</p>
<p>`<code>r     #' starwars_sample #' #' Description. #' #' @format A data frame with 10 rows and 14 variables: #' \describe{ #'   \item{ name }{ The character's name } #'   \item{ height }{ numeric } #'   \item{ mass }{ numeric } #'   \item{ hair_color }{ character } #'   \item{ skin_color }{ character } #'   \item{ eye_color }{ character } #'   \item{ birth_year }{ numeric } #'   \item{ sex }{ character } #'   \item{ gender }{ character } #'   \item{ homeworld }{ character } #'   \item{ species }{ character } #'   \item{ films }{ character } #'   \item{ vehicles }{ character } #'   \item{ starships }{ character } #' } #' @source Source "starwars_sample"</code> While the overall structure of the file should be preserved, you can edit the description, format, and source information as needed.</p>
<p>Finally, generate the LaTeX documentation using the command <code>devtools::document()</code> or <code>attachment::att_amend_desc()</code>.</p>
<p>Once your package is installed and loaded, you can access the dataset using the command <code>data("starwars_sample")</code>.</p>
</section>
</section>
<section id="using-inst" class="level2">
<h2 class="anchored" data-anchor-id="using-inst">Using <code>inst/</code></h2>
<p><strong>Use case</strong>: You want to store files intended for use only in unit tests or to share additional documentation (e.g., a scientific article).</p>
<p><img src="https://ymansiaux.github.io/yohann-data/posts/datainpkgs/img/2-system.file_en.png" class="img-fluid"></p>
<section id="example-1" class="level3">
<h3 class="anchored" data-anchor-id="example-1">Example</h3>
<ol type="1">
<li><p>Create the <code>inst/</code> folder at the package root: <code>dir.create(here::here("inst"))</code>.</p></li>
<li><p>Place the desired files in the folder.</p></li>
<li><p>Install the package.</p></li>
<li><p>The files are now accessible using a special function: <code>system.file()</code>, which points to the root of the <code>inst/</code> directory. For example, to access a file named <code>article.pdf</code> in the <code>inst/</code> folder, you would use <code>system.file("article.pdf", package = "mypackage")</code>. If the file is in a subfolder called ‚Äúdoc,‚Äù you would use <code>system.file("doc", "article.pdf", package = "mypackage")</code>.</p></li>
</ol>
<p><strong>Note: <code>system.file()</code> does not read a file; it only returns the file path.</strong></p>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>You now know all about incorporating data into an R package. You‚Äôve learned how to store data in the <code>data-raw/</code>, <code>data/</code>, and <code>inst/</code> directories and make it accessible from the package functions. You‚Äôve also learned how to document these data to make them usable for package users.</p>
<p>Whether the data is intended for users or developers, you now have all the tools to enrich your R package with data. Happy coding!</p>


</section>

 ]]></description>
  <category>development</category>
  <category>package</category>
  <category>R</category>
  <guid>https://ymansiaux.github.io/yohann-data/posts/datainpkgs/</guid>
  <pubDate>Sun, 13 Oct 2024 22:00:00 GMT</pubDate>
  <media:content url="https://ymansiaux.github.io/yohann-data/posts/datainpkgs/image.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Boost your shiny app with sparkling data visualizations: A deep dive into Chart.js JavaScript library</title>
  <dc:creator>Yohann Mansiaux</dc:creator>
  <link>https://ymansiaux.github.io/yohann-data/posts/chartJS/</link>
  <description><![CDATA[ 





<p><strong>Let‚Äôs continue our exploration of integrating JavaScript code into a {shiny} application! We will show how to move beyond the classic graphs produced in base R or with {ggplot2} to explore the interactive dataviz production libraries of JavaScript, particularly the Chart.js library.</strong></p>
<p>If you missed <a href="https://rtask.thinkr.fr/pimping-your-shiny-app-with-a-javascript-library-an-example-using-sweetalert2/" target="_blank">my first article on integrating JavaScript libraries into a {shiny} application</a> I invite you to read it before diving into this one.</p>
<p>Crucial concepts are covered and will not be repeated here. We particularly think about:</p>
<ul>
<li>How to add a JavaScript library‚Äôs dependencies to a {shiny} application<br>
</li>
<li>How to call JavaScript code from R</li>
</ul>
<section id="tldr" class="level2">
<h2 class="anchored" data-anchor-id="tldr">TL;DR</h2>
<ul>
<li>Creating interactive charts that go beyond the usual dataviz produced in R is possible by integrating a JavaScript library!</li>
<li><ul>
<li>We use the example of Chart.js, a very popular JavaScript dataviz library</li>
<li>Specificities related to integrating Chart.js into a <code>{shiny}</code> application are addressed, including passing data from R to JavaScript and the differences in expected data formats.</li>
<li>We‚Äôll see how to make sure our JavaScript code is working properly by using the web browser‚Äôs console.</li>
</ul></li>
</ul>
</section>
<section id="importing-chart.js-into-a-shiny-app-created-with-golem" class="level2">
<h2 class="anchored" data-anchor-id="importing-chart.js-into-a-shiny-app-created-with-golem">Importing Chart.js into a <code>{shiny}</code> app created with <code>{golem}</code></h2>
<ul>
<li>Chart.js is a JavaScript library that allows you to create many types of charts (bars, lines, radar, etc.) and customize them as you wish</li>
<li>It is very well documented</li>
<li>It is the most popular JavaScript dataviz library on GitHub (over 60,000 ‚Äústars‚Äù at the time of this article‚Äôs publication)</li>
</ul>
<p>To get an overview of the possibilities offered by Chart.js, visit the official page: https://www.chartjs.org/docs/latest/samples/information.html</p>
<section id="add-the-dependencies-to-chart.js-in-your-shiny-app" class="level3">
<h3 class="anchored" data-anchor-id="add-the-dependencies-to-chart.js-in-your-shiny-app">Add the dependencies to Chart.js in your {shiny} app</h3>
<p><strong>The following sections assume that you have already created a <code>{shiny}</code> app with <code>{golem}</code>.</strong></p>
<p>If this is not the case and you want to learn more about <code>{golem}</code>, I invite you to consult the <a href="https://thinkr-open.github.io/golem/" target="_blank">official documentation</a>.</p>
<p>To add Chart.js to your <code>{shiny}</code> app, you will need to find a way to incorporate the necessary files for its operation into your application. As we saw in our previous article, two solutions are possible.</p>
<ul>
<li>Use a ‚ÄúCDN‚Äù (Content Delivery Network) to load the files from a third-party server.</li>
<li>Download the necessary files and integrate them directly into the application.</li>
</ul>
<p>We will use the ‚ÄúCDN‚Äù method here.</p>
<p>Go to the <a href="https://www.chartjs.org/docs/latest/getting-started/" target="_blank"> ‚ÄúGetting Started‚Äù section of Chart.js documentation </a>.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://ymansiaux.github.io/yohann-data/posts/chartJS/img/01-cdn.png" class="img-fluid figure-img" style="width:80.0%"></p>
</figure>
</div>
</div>
</div>
<p>We retrieve the CDN URL and store this information for later use.</p>
<p>After creating the skeleton of an application via <code>{golem}</code>, we will add the Chart.js dependency.</p>
<p>Let‚Äôs open the <code>R/app_ui.R</code> file of our application and add the link we copied earlier into the body of the <code>golem_add_external_resources()</code> function.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">golem_add_external_resources <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>() {</span>
<span id="cb1-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_resource_path</span>(</span>
<span id="cb1-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"www"</span>,</span>
<span id="cb1-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">app_sys</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"app/www"</span>)</span>
<span id="cb1-5">  )</span>
<span id="cb1-6">  </span>
<span id="cb1-7">  tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(</span>
<span id="cb1-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">favicon</span>(),</span>
<span id="cb1-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bundle_resources</span>(</span>
<span id="cb1-10">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">path =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">app_sys</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"app/www"</span>),</span>
<span id="cb1-11">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">app_title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chartJS"</span></span>
<span id="cb1-12">    ),</span>
<span id="cb1-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add here other external resources</span></span>
<span id="cb1-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for example, you can add shinyalert::useShinyalert()</span></span>
<span id="cb1-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Chart.js</span></span>
<span id="cb1-16">    tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">script</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">src =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://cdn.jsdelivr.net/npm/chart.js"</span>)</span>
<span id="cb1-17">  )</span>
<span id="cb1-18">}</span></code></pre></div>
</section>
<section id="how-to-know-if-chart.js-is-properly-imported" class="level3">
<h3 class="anchored" data-anchor-id="how-to-know-if-chart.js-is-properly-imported">How to know if Chart.js is properly imported ?</h3>
<p>The <a href="https://www.chartjs.org/docs/latest/getting-started/" target="_blank"> ‚ÄúGetting Started‚Äù</a> section previously consulted to retrieve the CDN link indicates that it is necessary to incorporate the HTML <code>&lt;canvas&gt;</code> tag into our application to display a Chart.js chart. We add this element to the <code>R/app_ui.R</code> file of our application.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">app_ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(request) {</span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tagList</span>(</span>
<span id="cb2-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Leave this function for adding external resources</span></span>
<span id="cb2-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">golem_add_external_resources</span>(),</span>
<span id="cb2-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Your application UI logic</span></span>
<span id="cb2-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb2-7">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">h1</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"golemchartjs"</span>),</span>
<span id="cb2-8">      tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">div</span>(</span>
<span id="cb2-9">        tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">canvas</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myChart"</span>)</span>
<span id="cb2-10">      )</span>
<span id="cb2-11">    )</span>
<span id="cb2-12">  )</span>
<span id="cb2-13">}</span></code></pre></div>
<p>To verify that Chart.js is properly imported into our application, we run our app with <code>golem::run_dev()</code>, and the rest will take place in the web browser.</p>
<p><strong>NB: The following screenshots were taken using the Google Chrome browser.</strong></p>
<p>In the window of our application, right-click and then select ‚ÄúInspect‚Äù. In the new window that opens, choose the ‚ÄúConsole‚Äù tab and type the command to generate a Chart.js chart, as indicated once again in the <a href="https://www.chartjs.org/docs/latest/getting-started/" target="_blank"> ‚ÄúGetting Started‚Äù</a> section between the HTML <code>script</code> tags.</p>
<p>The code to copy and paste into the console is the following:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb3-1">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> ctx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'myChart'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-2"></span>
<span id="cb3-3">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Chart</span>(ctx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb3-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bar'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb3-6">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">labels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Red'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Blue'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Yellow'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Green'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Purple'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Orange'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-7">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">datasets</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [{</span>
<span id="cb3-8">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'# of Votes'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-9">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-10">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">borderWidth</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-11">      }]</span>
<span id="cb3-12">    }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-13">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">options</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb3-14">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">scales</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb3-15">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb3-16">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">beginAtZero</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span></span>
<span id="cb3-17">        }</span>
<span id="cb3-18">      }</span>
<span id="cb3-19">    }</span>
<span id="cb3-20">  })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><img src="https://ymansiaux.github.io/yohann-data/posts/chartJS/img/02-example_chartJS.gif" width="80%"></p>
<p>The chart from the demo page appears as expected! üéâ</p>
<p>We can move on! üòä</p>
<p>The application code for this step is available here: https://github.com/ymansiaux/golemchartjs/tree/step1</p>
</section>
</section>
<section id="creating-a-bar-chart-with-chart.js" class="level2">
<h2 class="anchored" data-anchor-id="creating-a-bar-chart-with-chart.js">Creating a Bar Chart with Chart.js</h2>
<p>The code used previously allowed us to verify that Chart.js was properly imported into our application. Now, we will see how to create a Chart.js chart from our <code>{shiny}</code> application. The goal is to produce bar charts for various datasets with customizable options based on user choices.</p>
<p>Let‚Äôs revisit the code executed previously:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb4-1">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> ctx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'myChart'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-2"></span>
<span id="cb4-3">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Chart</span>(ctx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb4-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bar'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb4-6">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">labels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Red'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Blue'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Yellow'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Green'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Purple'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Orange'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-7">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">datasets</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [{</span>
<span id="cb4-8">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'# of Votes'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-9">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-10">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">borderWidth</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb4-11">      }]</span>
<span id="cb4-12">    }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-13">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">options</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb4-14">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">scales</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb4-15">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb4-16">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">beginAtZero</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span></span>
<span id="cb4-17">        }</span>
<span id="cb4-18">      }</span>
<span id="cb4-19">    }</span>
<span id="cb4-20">  })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>We could imagine passing the <code>labels</code>, <code>label</code>, <code>data</code>, and <code>borderWidth</code> elements as function parameters.</p>
<p>Let‚Äôs go! üöÄ</p>
<section id="creating-a-javascript-code-usable-from-r" class="level3">
<h3 class="anchored" data-anchor-id="creating-a-javascript-code-usable-from-r">Creating a JavaScript code usable from R</h3>
<p>We saw in our previous article that the way to call JavaScript code from R is to use a ‚ÄúJS handler‚Äù. To do this, go to the <code>dev/02_dev.R</code> file! We add the following line in the ‚ÄúExternal Resources‚Äù section:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">golem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_js_handler</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"barchartJS"</span>)</span></code></pre></div>
<p>We fill in the skeleton by indicating ‚ÄúbarchartJS‚Äù as the name of our handler and adding the JavaScript code we saw previously.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ready</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> () {</span>
<span id="cb6-2">  Shiny<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addCustomMessageHandler</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"barchartJS"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> (arg) {</span>
<span id="cb6-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> ctx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myChart"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-4"></span>
<span id="cb6-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Chart</span>(ctx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb6-6">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bar"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-7">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb6-8">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">labels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Red"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Blue"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Yellow"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Green"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Purple"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Orange"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-9">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">datasets</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [</span>
<span id="cb6-10">          {</span>
<span id="cb6-11">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"# of Votes"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-12">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-13">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">borderWidth</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-14">          }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-15">        ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-16">      }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-17">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">options</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb6-18">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">scales</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb6-19">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb6-20">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">beginAtZero</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-21">          }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-22">        }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-23">      }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-24">    })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-25">  })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-26">})<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>We replace the <code>labels</code>, <code>label</code>, <code>data</code>, and <code>borderWidth</code> parameters, which are hardcoded here, with the future elements passed as arguments to our handler. The notation to use here will be <code>arg.param_name</code> to access the values passed by our <code>{shiny}</code> application. The <code>.</code> notation is a JavaScript convention for accessing properties of an object. To draw a parallel with R, it‚Äôs somewhat like using <code>arg$param_name</code>.</p>
<p>At the beginning of our handler, we add a call to the <code>console.log()</code> function to check the contents of the <code>arg</code> element from the JS console. This will allow us to verify that the elements passed from R are correctly transmitted to our handler.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>( <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span> )<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ready</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>() {</span>
<span id="cb7-2">  Shiny<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addCustomMessageHandler</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'barchartJS'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(arg) {</span>
<span id="cb7-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(arg)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>    </span>
<span id="cb7-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> ctx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'myChart'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-5"></span>
<span id="cb7-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Chart</span>(ctx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb7-7">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bar'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb7-8">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb7-9">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">labels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb7-10">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">datasets</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [{</span>
<span id="cb7-11">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb7-12">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb7-13">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">borderWidth</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">borderWidth</span></span>
<span id="cb7-14">        }]</span>
<span id="cb7-15">      }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb7-16">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">options</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb7-17">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">scales</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb7-18">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb7-19">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">beginAtZero</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span></span>
<span id="cb7-20">          }</span>
<span id="cb7-21">        }</span>
<span id="cb7-22">      }</span>
<span id="cb7-23">    })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> </span>
<span id="cb7-24">  })</span>
<span id="cb7-25">})<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>We will add elements to the <code>R/app_ui.R</code> file to generate the parameters to be passed to our handler:</p>
<ul>
<li><code>arg.labels</code> will be a vector of 5 character strings, randomly chosen from the letters of the latin alphabet.</li>
<li><code>arg.label</code> will be a character string, randomly chosen from the letters of the latin alphabet.</li>
<li><code>arg.data</code> will be a vector of 5 integer numbers, randomly chosen between 1 and 100.</li>
<li><code>arg.borderWidth</code> will be an integer, randomly chosen between 1 and 5.</li>
</ul>
<p>The display of the chart will be triggered by clicking a ‚ÄúShow Barplot‚Äù button.</p>
<p>Here is the content of our <code>R/app_ui.R</code> file:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">app_ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(request) {</span>
<span id="cb8-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tagList</span>(</span>
<span id="cb8-3">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Leave this function for adding external resources</span></span>
<span id="cb8-4">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">golem_add_external_resources</span>(),</span>
<span id="cb8-5">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Your application UI logic</span></span>
<span id="cb8-6">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb8-7">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">h1</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"golemchartjs"</span>),</span>
<span id="cb8-8">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(</span>
<span id="cb8-9">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inputId =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"showbarplot"</span>,</span>
<span id="cb8-10">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Show Barplot"</span></span>
<span id="cb8-11">            ),</span>
<span id="cb8-12">            tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">div</span>(</span>
<span id="cb8-13">                tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">canvas</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myChart"</span>)</span>
<span id="cb8-14">            )</span>
<span id="cb8-15">        )</span>
<span id="cb8-16">    )</span>
<span id="cb8-17">}</span></code></pre></div>
<p>And the content of the <code>R/app_server.R</code> file :</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">app_server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output, session) {</span>
<span id="cb9-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observeEvent</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>showbarplot, {</span>
<span id="cb9-3">        app_labels <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(letters, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb9-4">        app_label <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(letters, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb9-5">        app_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb9-6">        app_borderWidth <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb9-7"></span>
<span id="cb9-8">        golem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">invoke_js</span>(</span>
<span id="cb9-9">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"barchartJS"</span>,</span>
<span id="cb9-10">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb9-11">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> app_labels,</span>
<span id="cb9-12">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> app_label,</span>
<span id="cb9-13">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> app_data,</span>
<span id="cb9-14">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">borderWidth =</span> app_borderWidth</span>
<span id="cb9-15">            )</span>
<span id="cb9-16">        )</span>
<span id="cb9-17">    })</span>
<span id="cb9-18">}</span></code></pre></div>
<p>Here are the key points to remember:</p>
<ul>
<li>The first parameter in the call to <code>golem::invoke_js()</code> is the name of the JavaScript handler.</li>
<li>The following parameters are the elements to be passed as arguments to our handler. They should be passed in a named list where the names correspond to the elements in the <code>arg</code> object of our handler.</li>
</ul>
<p>Let‚Äôs run our application with <code>golem::run_dev()</code> and verify that everything works as expected!</p>
<p><img src="https://ymansiaux.github.io/yohann-data/posts/chartJS/img/03-premier_chart_from_invoke.gif" width="80%"></p>
<p>Congratulations! üëè</p>
<p>In addition to the displayed chart, we can see that the JavaScript console in the browser correctly shows the content of the <code>arg</code> object, including its 4 sub-elements: <code>labels</code>, <code>label</code>, <code>data</code>, and <code>borderWidth</code>.</p>
<p>And if you click the button again, what happens?</p>
<p><img src="https://ymansiaux.github.io/yohann-data/posts/chartJS/img/04-graphique_bloque.gif" width="80%"></p>
<p>The chart does not update; it remains stuck on the first chart! üòÆ</p>
<p>The JavaScript console indicates that the <code>arg</code> object has indeed been updated, but the chart does not refresh. Additionally, an error message appears in the JavaScript console: ‚ÄúError: Canvas is already in use. Chart with ID ‚Äò0‚Äô must be destroyed before the canvas with ID ‚ÄòmyChart‚Äô can be reused.‚Äù</p>
<p>Let‚Äôs try to understand what‚Äôs happening: in the <code>R/app_ui.R</code> file, we added a <code>canvas</code> element with the ID ‚ÄúmyChart‚Äù (with <code>tags$canvas(id = "myChart")</code>). This element is used to display the chart. When we click the ‚ÄúShow Barplot‚Äù button, a new chart is generated and displayed in this element. However, the previous chart is not destroyed, and the error message indicates that the ‚Äúcanvas‚Äù is already in use.</p>
<p>The application code for this step is available here: https://github.com/ymansiaux/golemchartjs/tree/step2</p>
</section>
<section id="why-isnt-the-chart-updating" class="level3">
<h3 class="anchored" data-anchor-id="why-isnt-the-chart-updating">Why isn‚Äôt the chart updating?</h3>
<p>To find the answer, we need to refer back to the Chart.js documentation. We can read in the <a href="https://www.chartjs.org/docs/latest/developers/api.html#destroy" target="_blank"> ‚Äú.destroy()‚Äù</a> section that in order to reuse the HTML ‚Äúcanvas‚Äù element for displaying a new chart, it is necessary to destroy the previous chart.</p>
<p>There is also a command <a href="https://www.chartjs.org/docs/latest/developers/api.html#update-mode" target="_blank"> ‚Äú.update()‚Äù</a> for updating an existing chart. This method seems more appropriate here, as we are using the same type of chart, with only a few parameters changing. The <code>.update()</code> method allows updating an existing chart without having to destroy and recreate it, which will be less ‚Äúbrutal‚Äù visually (with a chart disappearing and then reappearing). However, the <code>.destroy()</code> method should be kept in mind for cases where we want to radically change the type of chart, for example.</p>
<p>Updating a chart implies that a chart has already been generated once. Therefore, we need to modify our JavaScript handler to account for this and find a way to detect the existence of a chart on our page. For this, we will refer again to the Chart.js documentation, particularly the <code>getChart</code> method: https://www.chartjs.org/docs/latest/developers/api.html#static-getchart-key.</p>
<p>The command to use is in the following form: <code>const chart = Chart.getChart("canvas-id");</code>. According to the documentation, if the chart exists, the variable <code>chart</code> will contain the Chart.js object associated with the HTML ‚Äúcanvas‚Äù element. If the chart does not exist, the variable <code>chart</code> will be <code>undefined</code>.</p>
<p>For this command to work, we need to replace ‚Äúcanvas-id‚Äù with the ID of our ‚Äúcanvas‚Äù, which is ‚ÄúmyChart‚Äù here: <code>const chart = Chart.getChart("myChart");</code></p>
<p>Let‚Äôs restart our application. We indeed find that the <code>chart</code> object is <code>undefined</code> as long as the chart has not been created, and it correctly reflects this status afterwards.</p>
<p><img src="https://ymansiaux.github.io/yohann-data/posts/chartJS/img/04bis-undefined_or_not.gif" width="80%"></p>
<p>We can adapt our code as follows:</p>
<ul>
<li><p>If <code>chart</code> is <code>undefined</code>, we create a new chart.</p></li>
<li><p>If <code>chart</code> is not <code>undefined</code>, we update the existing chart.</p></li>
</ul>
<p>We adapt our handler by referring to the documentation for the <code>.update()</code> method: https://www.chartjs.org/docs/latest/developers/api.html#update-mode</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ready</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> () {</span>
<span id="cb10-2">  Shiny<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addCustomMessageHandler</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"barchartJS"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> (arg) {</span>
<span id="cb10-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(arg)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> ctx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myChart"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-5"></span>
<span id="cb10-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> chart <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Chart<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getChart</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myChart"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-7"></span>
<span id="cb10-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (chart <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">undefined</span>) {</span>
<span id="cb10-9">      <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Creating a new chart"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-10">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Chart</span>(ctx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb10-11">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bar"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-12">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb10-13">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">labels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-14">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">datasets</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [</span>
<span id="cb10-15">            {</span>
<span id="cb10-16">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-17">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-18">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">borderWidth</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">borderWidth</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-19">            }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-20">          ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-21">        }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-22">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">options</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb10-23">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">scales</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb10-24">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb10-25">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">beginAtZero</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-26">            }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-27">          }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-28">        }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-29">      })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-30">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb10-31">      <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Updating an existing chart"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-32">      chart<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-33">      chart<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">datasets</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-34">      chart<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">datasets</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-35">      chart<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">datasets</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">borderWidth</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">borderWidth</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-36">      chart<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-37">    }</span>
<span id="cb10-38">  })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-39">})<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>This example is a bit more complex than those seen so far:</p>
<ul>
<li><p>Retrieve the Chart.js object associated with the HTML ‚Äúcanvas‚Äù element using the method <code>Chart.getChart("myChart")</code>.</p></li>
<li><p>Check if this object is <code>undefined</code>: if it is, use the code that has been working until now to create a new chart.</p></li>
<li><p>If it is not <code>undefined</code>, overwrite the configuration elements you want to update and then use the <code>.update()</code> method. Note the specifics of handling configuration elements: <code>chart.data.labels = arg.labels</code> for the labels, <code>chart.data.datasets[0].label = arg.label</code> for the label, etc. Use <code>.</code> to access object properties, with each <code>.</code> allowing access to a deeper level of ‚Äúdepth‚Äù. It is also important to note that array indexing starts at 0 in JavaScript, not at 1 like in R.</p></li>
</ul>
<p>After all these efforts, let‚Äôs see if everything is back in order üòÑ!</p>
<p><img src="https://ymansiaux.github.io/yohann-data/posts/chartJS/img/05-graphique_debloque.gif" width="80%"></p>
<p>Phew, everything is OK this time! ü•≤</p>
<p>We‚Äôve touched on a more complex case of using a JavaScript library in a <code>{shiny}</code> application. It is crucial to understand the library‚Äôs functioning by delving into the depths of its documentation. Moreover, one of the advantages of using a very popular library is that you can often find help on <a href="https://stackoverflow.com/questions/40056555/destroy-chart-js-bar-graph-to-redraw-other-graph-in-same-canvas" target="_blank"> StackOverflow</a> üòä (here is an example of using the <code>.destroy()</code> method).</p>
<p>Feel free to go further in customizing your chart, such as changing the bar colors: https://www.chartjs.org/docs/latest/general/colors.html and https://www.chartjs.org/docs/latest/charts/bar.html.</p>
<p>The best way to learn is to try reproducing examples from the documentation.</p>
<p>The application code for this step is available here: https://github.com/ymansiaux/golemchartjs/tree/step3</p>
</section>
</section>
<section id="creating-a-scatter-plot-with-chart.js" class="level2">
<h2 class="anchored" data-anchor-id="creating-a-scatter-plot-with-chart.js">Creating a Scatter Plot with Chart.js</h2>
<p>We will attempt to create a scatter plot with Chart.js. To develop our code, we will rely on the Chart.js documentation: https://www.chartjs.org/docs/latest/charts/scatter.html.</p>
<p>As before, our code will be stored in a JS handler. Therefore, we will add a new handler in the <code>dev/02_dev.R</code> file:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">golem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_js_handler</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scatterplotJS"</span>)</span></code></pre></div>
<p>The documentation is slightly different from that provided for bar charts. We will need to adapt our handler accordingly. We identify an element <code>config</code>, which will include the <code>type</code>, <code>data</code>, and <code>options</code> elements we have already seen. There is also a <code>data</code> element containing <code>datasets</code> and <code>labels</code>.</p>
<p>We will fill in the skeleton of our handler with the JavaScript code from the Chart.js documentation. Initially, we will leave out the ‚Äúupdate‚Äù part.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ready</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> () {</span>
<span id="cb12-2">  Shiny<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addCustomMessageHandler</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scatterplotJS"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> (arg) {</span>
<span id="cb12-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> ctx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myChart2"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-4"></span>
<span id="cb12-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb12-6">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">datasets</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [</span>
<span id="cb12-7">        {</span>
<span id="cb12-8">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Scatter Dataset"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-9">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [</span>
<span id="cb12-10">            {</span>
<span id="cb12-11">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-12">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-13">            }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-14">            {</span>
<span id="cb12-15">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-16">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-17">            }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-18">            {</span>
<span id="cb12-19">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-20">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-21">            }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-22">            {</span>
<span id="cb12-23">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-24">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-25">            }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-26">          ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-27">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">backgroundColor</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(255, 99, 132)"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-28">        }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-29">      ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-30">    }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-31"></span>
<span id="cb12-32">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb12-33">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scatter"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-34">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-35">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">options</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb12-36">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">scales</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb12-37">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb12-38">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"linear"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-39">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">position</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-40">          }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-41">        }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-42">      }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-43">    }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-44">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Chart</span>(ctx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> config)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-45">  })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-46">})<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Our JS handler ‚ÄúscatterplotJS‚Äù is ready! We need to add the ‚Äúdiv‚Äù and ‚Äúcanvas‚Äù to the UI to display the generated chart. We need to modify the HTML ID of our ‚Äúcanvas‚Äù to avoid any conflict with the bar chart. It will be named ‚ÄúmyChart2‚Äù here.</p>
<p>Note that there is a slightly different syntax compared to the code used for the bar chart, where the call to ‚Äúnew Chart‚Äù was made directly with the <code>data</code> and <code>options</code> elements. Here, we store these elements in <code>data</code> and <code>config</code> variables before passing them to <code>new Chart</code>.</p>
<p>Next, we add the following to the <code>R/app_ui.R</code> file:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">h1</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Scatterplot"</span>),</span>
<span id="cb13-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(</span>
<span id="cb13-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inputId =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"showscatterplot"</span>,</span>
<span id="cb13-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Show Scatterplot"</span></span>
<span id="cb13-5">),</span>
<span id="cb13-6">tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">div</span>(</span>
<span id="cb13-7">    tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">canvas</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myChart2"</span>)</span>
<span id="cb13-8">)</span></code></pre></div>
<p>We add the following to the <code>R/app_server.R</code> file:</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observeEvent</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>showscatterplot, {</span>
<span id="cb14-2">    golem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">invoke_js</span>(</span>
<span id="cb14-3">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scatterplotJS"</span>,</span>
<span id="cb14-4">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb14-5">      )</span>
<span id="cb14-6">    )</span>
<span id="cb14-7">  })</span></code></pre></div>
<p>Our handler does not use any elements passed from R. However, it is necessary to pass an empty list as an argument to ensure the proper functioning of <code>golem::invoke_js()</code>.</p>
<p>Let‚Äôs run your application with <code>golem::run_dev()</code> and verify that everything works as expected!</p>
<p><img src="https://ymansiaux.github.io/yohann-data/posts/chartJS/img/06-scatterplot_basique.gif" width="80%"></p>
<p>The chart from the documentation works! üéâ</p>
<p>Now, let‚Äôs go further by passing our own data as input.</p>
<p>The application code for this step is available here: https://github.com/ymansiaux/golemchartjs/tree/step4</p>
<section id="an-example-with-the-iris-dataset" class="level3">
<h3 class="anchored" data-anchor-id="an-example-with-the-iris-dataset">An example with the iris dataset</h3>
<p>We will use the <code>iris</code> dataset to generate a scatter plot. We will pass as arguments to our JS handler the data from the <code>Sepal.Length</code> and <code>Sepal.Width</code> columns.</p>
<p>As with the bar chart, we will use elements passed from R through the <code>arg</code> object in JavaScript.</p>
<p>We modify the <code>data</code> object to include a legend title and, most importantly, the data. To observe the elements passed from R, we add a call to <code>console.log()</code>.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb15-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(arg)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb15-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">datasets</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [</span>
<span id="cb15-4">    {</span>
<span id="cb15-5">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb15-6">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb15-7">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">backgroundColor</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(255, 99, 132)"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb15-8">    }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb15-9">  ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb15-10">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>As a reminder, in the example from the documentation, the data is passed in the form of an ‚Äúarray of dictionaries‚Äù. Each dictionary contains the keys <code>x</code> and <code>y</code> for the point coordinates.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb16-1">data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [{</span>
<span id="cb16-2">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-3">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb16-4">  }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb16-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-6">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb16-7">  }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb16-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb16-10">  }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb16-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.5</span></span>
<span id="cb16-13">}]</span></code></pre></div>
<p>Let‚Äôs try to pass the contents of the <code>Sepal.Length</code> and <code>Sepal.Width</code> columns via a list. We make the following modification in <code>R/app_server.R</code>:</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observeEvent</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>showscatterplot, {</span>
<span id="cb17-2">    golem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">invoke_js</span>(</span>
<span id="cb17-3">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scatterplotJS"</span>,</span>
<span id="cb17-4">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb17-5">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"My scatterplot"</span>,</span>
<span id="cb17-6">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb17-7">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sepal.Length,</span>
<span id="cb17-8">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sepal.Width</span>
<span id="cb17-9">            )</span>
<span id="cb17-10">        )</span>
<span id="cb17-11">    )</span>
<span id="cb17-12">})</span></code></pre></div>
<p>We restart our application, and unfortunately, nothing shows up!</p>
<p><img src="https://ymansiaux.github.io/yohann-data/posts/chartJS/img/07-scatterplot_KO.gif" width="80%"></p>
<p>Thanks to the <code>console.log()</code> call in our handler, we can observe the content of the <code>arg</code> object in the JavaScript console of the browser. We notice that the data passed is not in the correct format. Here, we get an array of two elements, the first containing the values of <code>Sepal.Length</code> and the second containing the values of <code>Sepal.Width</code>, which is not the expected format.</p>
<p>Here, we need to do some work on the R side to transform our data into the expected format.</p>
<p>If we display a JSON preview of the data we passed as input, indeed the rendering is incorrect.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">jsonlite<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toJSON</span>(</span>
<span id="cb18-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb18-3">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sepal.Length,</span>
<span id="cb18-4">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sepal.Width</span>
<span id="cb18-5">    )</span>
<span id="cb18-6">)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>{"x":[5.1,4.9,4.7,4.6,5,5.4,4.6,5,4.4,4.9],"y":[3.5,3,3.2,3.1,3.6,3.9,3.4,3.4,2.9,3.1]} </code></pre>
</div>
</div>
<p>For manipulating lists, the <code>{purrr}</code> package is a top choice.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">new_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transpose</span>(</span>
<span id="cb20-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb20-3">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sepal.Length,</span>
<span id="cb20-4">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sepal.Width</span>
<span id="cb20-5">    )</span>
<span id="cb20-6">)</span>
<span id="cb20-7">jsonlite<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toJSON</span>(</span>
<span id="cb20-8">    new_data,</span>
<span id="cb20-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">auto_unbox =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb20-10">)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>[{"x":5.1,"y":3.5},{"x":4.9,"y":3},{"x":4.7,"y":3.2},{"x":4.6,"y":3.1},{"x":5,"y":3.6},{"x":5.4,"y":3.9},{"x":4.6,"y":3.4},{"x":5,"y":3.4},{"x":4.4,"y":2.9},{"x":4.9,"y":3.1}] </code></pre>
</div>
</div>
<p>The rendering seems to be more in line with what is expected by Chart.js. Therefore, we will modify our code to pass the data in this manner.</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observeEvent</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>showscatterplot, {</span>
<span id="cb22-2">    golem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">invoke_js</span>(</span>
<span id="cb22-3">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scatterplotJS"</span>,</span>
<span id="cb22-4">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb22-5">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"My scatterplot"</span>,</span>
<span id="cb22-6">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transpose</span>(</span>
<span id="cb22-7">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb22-8">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sepal.Length,</span>
<span id="cb22-9">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sepal.Width</span>
<span id="cb22-10">                )</span>
<span id="cb22-11">            )</span>
<span id="cb22-12">        )</span>
<span id="cb22-13">    )</span>
<span id="cb22-14">})</span></code></pre></div>
<p>Let‚Äôs observe the result:</p>
<p><img src="https://ymansiaux.github.io/yohann-data/posts/chartJS/img/08-scatterplot_OK.gif" width="80%"></p>
<p>This time it‚Äôs good! üòä We can see in the JavaScript console that the data has indeed been passed in the correct format.</p>
<p>The application code for this step is available here: https://github.com/ymansiaux/golemchartjs/tree/step5</p>
</section>
<section id="a-little-extra-polish" class="level3">
<h3 class="anchored" data-anchor-id="a-little-extra-polish">A Little Extra Polish</h3>
<p>Our chart still lacks titles for the axes! To find out how to do this, the documentation comes to our rescue once again: https://www.chartjs.org/docs/latest/axes/labelling.html#scale-title-configuration.</p>
<p>We need to add a <code>title</code> object to our existing <code>scales</code> object. Each axis, ‚Äúx‚Äù and ‚Äúy‚Äù, is an object within the <code>scales</code> object and can have a title along with its associated parameters (color, font, etc.).</p>
<p>We will add a <code>title</code> element to the <code>x</code> object within our <code>scales</code> object. Several parameters are customizable, and we will need to modify the <code>text</code> parameter to set the title for each axis and the <code>display</code> parameter to show them, as this parameter is set to <code>false</code> by default (<strong>note the different boolean notation between JavaScript and R</strong>: <code>true/false</code> VS <code>TRUE/FALSE</code>).</p>
<p>The documentation sometimes lacks examples, so we can also rely on StackOverflow: https://stackoverflow.com/questions/27910719/in-chart-js-set-chart-title-name-of-x-axis-and-y-axis. However, be careful with the version of Chart.js used, as parameters may vary.</p>
<p>In our JS handler, we will add an <code>xAxisTitle</code> parameter and a <code>yAxisTitle</code> parameter.</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb23-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb23-2">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'scatter'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb23-3">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb23-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">options</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb23-5">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">scales</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb23-6">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb23-7">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'linear'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb23-8">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">position</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bottom'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb23-9">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">title</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb23-10">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">display</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb23-11">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xAxisTitle</span></span>
<span id="cb23-12">            }</span>
<span id="cb23-13">          }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb23-14">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb23-15">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">title</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb23-16">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">display</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb23-17">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yAxisTitle</span></span>
<span id="cb23-18">          }</span>
<span id="cb23-19">        }</span>
<span id="cb23-20">      }</span>
<span id="cb23-21">    }</span>
<span id="cb23-22">  }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Be cautious once again about the syntax difference between JavaScript and R. Parameters are passed in the form <code>display: true</code> rather than <code>display = TRUE</code>, for example. Confusing <code>:</code> with <code>=</code> can easily occur and result in non-functional code.</p>
<p>In our <code>R/app_server.R</code> file, we will add the <code>xAxisTitle</code> and <code>yAxisTitle</code> elements to the list passed as an argument to our handler.</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observeEvent</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>showscatterplot, {</span>
<span id="cb24-2">    golem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">invoke_js</span>(</span>
<span id="cb24-3">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scatterplotJS"</span>,</span>
<span id="cb24-4">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb24-5">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"My scatterplot"</span>,</span>
<span id="cb24-6">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transpose</span>(</span>
<span id="cb24-7">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb24-8">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sepal.Length,</span>
<span id="cb24-9">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sepal.Width</span>
<span id="cb24-10">                )</span>
<span id="cb24-11">            ),</span>
<span id="cb24-12">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xAxisTitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sepal Length"</span>,</span>
<span id="cb24-13">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yAxisTitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sepal Width"</span></span>
<span id="cb24-14">        )</span>
<span id="cb24-15">    )</span>
<span id="cb24-16">})</span></code></pre></div>
<p>And here‚Äôs the result in our application:</p>
<p><img src="https://ymansiaux.github.io/yohann-data/posts/chartJS/img/09_scatterplot_axislabels.gif" width="80%"></p>
<p>The application code for this step is available here: https://github.com/ymansiaux/golemchartjs/tree/step6</p>
</section>
<section id="going-further-with-the-scatter-plot" class="level3">
<h3 class="anchored" data-anchor-id="going-further-with-the-scatter-plot">Going further with the scatter plot</h3>
<p>Additional modifications can be made to enhance the chart:</p>
<ul>
<li><p>Modify the title</p></li>
<li><p>Change the fill color of the points and their border color</p></li>
</ul>
<p>Here are the resources used to produce the code that we will present shortly:</p>
<ul>
<li><p>Title: https://www.chartjs.org/docs/latest/configuration/title.html</p>
<p>The title should be included in a <code>plugins</code> object, which in turn is included in the <code>options</code> object.</p></li>
<li><p>Point Colors: https://www.chartjs.org/docs/latest/charts/line.html#point-styles</p>
<p>The color of the points will be managed within the <code>datasets</code> object.</p></li>
</ul>
<p>We will offer users the ability to set the chart title, its color, and the color of the points through <code>shiny</code> inputs (which will be a good way to revisit the ‚Äúupdate‚Äù-related issues üòâ).</p>
<p>Below is a preview of the chart created here (without functional ‚Äúupdate‚Äù for now):</p>
<p><img src="https://ymansiaux.github.io/yohann-data/posts/chartJS/img/10_fullscatter.gif" width="80%"></p>
<p>The handler code has been completed to account for these new elements:</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb25-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ready</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> () {</span>
<span id="cb25-2">  Shiny<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addCustomMessageHandler</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scatterplotJS"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> (arg) {</span>
<span id="cb25-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> ctx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myChart2"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-4"></span>
<span id="cb25-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(arg)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-6"></span>
<span id="cb25-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb25-8">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">datasets</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [</span>
<span id="cb25-9">        {</span>
<span id="cb25-10">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-11">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-12">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">borderColor</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pointBorderColor</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-13">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">backgroundColor</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pointBackGroundColor</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-14">        }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-15">      ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-16">    }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-17"></span>
<span id="cb25-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> plugins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb25-19">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">title</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb25-20">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">display</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-21">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mainTitle</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-22">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mainTitleColor</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-23">      }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-24">    }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-25"></span>
<span id="cb25-26">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb25-27">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scatter"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-28">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-29">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">options</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb25-30">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">plugins</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> plugins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-31">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">scales</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb25-32">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb25-33">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"linear"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-34">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">position</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-35">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">title</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb25-36">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">display</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-37">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xAxisTitle</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-38">            }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-39">          }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-40">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb25-41">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">title</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb25-42">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">display</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-43">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yAxisTitle</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-44">            }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-45">          }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-46">        }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-47">      }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb25-48">    }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-49">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Chart</span>(ctx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> config)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-50">  })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-51">})<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>In <code>R/app_ui.R</code>, elements have been added to allow the user to pass the necessary parameters:</p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">h1</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Scatterplot"</span>),</span>
<span id="cb26-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textInput</span>(</span>
<span id="cb26-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inputId =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scatterplot_title"</span>,</span>
<span id="cb26-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Scatterplot Title"</span>,</span>
<span id="cb26-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ChartJS rocks !"</span></span>
<span id="cb26-6">),</span>
<span id="cb26-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectInput</span>(</span>
<span id="cb26-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inputId =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title_color"</span>,</span>
<span id="cb26-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Title Color"</span>,</span>
<span id="cb26-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">choices =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"brown"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orange"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"purple"</span>),</span>
<span id="cb26-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selected =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"brown"</span></span>
<span id="cb26-12">),</span>
<span id="cb26-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectInput</span>(</span>
<span id="cb26-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inputId =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"points_background_color"</span>,</span>
<span id="cb26-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Points Background Color"</span>,</span>
<span id="cb26-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">choices =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>),</span>
<span id="cb26-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selected =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span></span>
<span id="cb26-18">),</span>
<span id="cb26-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(</span>
<span id="cb26-20">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inputId =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"showscatterplot"</span>,</span>
<span id="cb26-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Show Scatterplot"</span></span>
<span id="cb26-22">),</span>
<span id="cb26-23">tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">div</span>(</span>
<span id="cb26-24">    tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">canvas</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myChart2"</span>)</span>
<span id="cb26-25">)</span></code></pre></div>
<p>Finally, in <code>R/app_server.R</code>, we add the necessary elements to pass the parameters to our handler:</p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observeEvent</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>showscatterplot, {</span>
<span id="cb27-2">        golem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">invoke_js</span>(</span>
<span id="cb27-3">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scatterplotJS"</span>,</span>
<span id="cb27-4">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb27-5">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"My scatterplot"</span>,</span>
<span id="cb27-6">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transpose</span>(</span>
<span id="cb27-7">                    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb27-8">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sepal.Length,</span>
<span id="cb27-9">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sepal.Width</span>
<span id="cb27-10">                    )</span>
<span id="cb27-11">                ),</span>
<span id="cb27-12">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xAxisTitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sepal Length"</span>,</span>
<span id="cb27-13">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yAxisTitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sepal Width"</span>,</span>
<span id="cb27-14">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mainTitle =</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>scatterplot_title,</span>
<span id="cb27-15">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mainTitleColor =</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>title_color,</span>
<span id="cb27-16">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pointBorderColor =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,</span>
<span id="cb27-17">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pointBackGroundColor =</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>points_background_color</span>
<span id="cb27-18">            )</span>
<span id="cb27-19">        )</span>
<span id="cb27-20">    })</span></code></pre></div>
<p>The application code for this step is available here: https://github.com/ymansiaux/golemchartjs/tree/step7</p>
<p>We still need to include the <code>.update()</code> method to account for updates to <code>shiny</code> inputs related to the title and the color of the points.</p>
<p>We will use the approach from the previous chart to modify our JS handler accordingly.</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb28-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ready</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> () {</span>
<span id="cb28-2">  Shiny<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addCustomMessageHandler</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scatterplotJS"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> (arg) {</span>
<span id="cb28-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> ctx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myChart2"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-4"></span>
<span id="cb28-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(arg)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-6"></span>
<span id="cb28-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> chart2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Chart<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getChart</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myChart2"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-8"></span>
<span id="cb28-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (chart2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">undefined</span>) {</span>
<span id="cb28-10">      <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Creating a new chart"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-11"></span>
<span id="cb28-12">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb28-13">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">datasets</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [</span>
<span id="cb28-14">          {</span>
<span id="cb28-15">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-16">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-17">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">borderColor</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pointBorderColor</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-18">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">backgroundColor</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pointBackGroundColor</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-19">          }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-20">        ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-21">      }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-22"></span>
<span id="cb28-23">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> plugins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb28-24">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">title</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb28-25">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">display</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-26">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mainTitle</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-27">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mainTitleColor</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-28">        }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-29">      }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-30"></span>
<span id="cb28-31">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb28-32">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scatter"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-33">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-34">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">options</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb28-35">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">plugins</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> plugins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-36">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">scales</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb28-37">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb28-38">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"linear"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-39">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">position</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-40">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">title</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb28-41">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">display</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-42">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xAxisTitle</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-43">              }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-44">            }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-45">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb28-46">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">title</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb28-47">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">display</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-48">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yAxisTitle</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-49">              }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-50">            }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-51">          }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-52">        }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-53">      }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-54">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Chart</span>(ctx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> config)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-55">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb28-56">      <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Updating an existing chart"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-57">      chart2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">datasets</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">backgroundColor</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pointBackGroundColor</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-58">      chart2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">options</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plugins</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mainTitle</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-59">      chart2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">options</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plugins</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mainTitleColor</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-60">      chart2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-61">    }</span>
<span id="cb28-62">  })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-63">})<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Let‚Äôs observe the result:</p>
<p><img src="https://ymansiaux.github.io/yohann-data/posts/chartJS/img/11_fullscatter_with_update.gif" width="80%"></p>
<p>Well done! üéâ</p>
<p>The application code for this step is available here: https://github.com/ymansiaux/golemchartjs/tree/step8</p>
</section>
<section id="modifying-the-tooltip-advanced-level" class="level3">
<h3 class="anchored" data-anchor-id="modifying-the-tooltip-advanced-level">Modifying the tooltip (advanced level)</h3>
<p>We will look to modify the tooltip that appears when hovering over a point on the chart. In addition to changing its title, we want to display the row number from the dataset corresponding to the hovered point, as well as the corresponding values of <code>Sepal.Length</code> and <code>Sepal.Width</code>.</p>
<p>Here are the resources used:</p>
<ul>
<li><p>Tooltip title: https://www.chartjs.org/docs/latest/configuration/tooltip.html#tooltip-callbacks</p></li>
<li><p>Tooltip content: https://www.chartjs.org/docs/latest/configuration/tooltip.html#tooltip-callbacks and https://www.youtube.com/watch?v=anseX1ePfUw</p></li>
</ul>
<p>This part will be more complex than the previous ones. But we will manage it! üí™</p>
<p>The <code>plugins</code> object, used previously to manage the chart title, contains a <code>tooltip</code> element, which in turn contains a <code>callbacks</code> element. It is within this element that we can modify the title and content of the tooltip. Most tooltip elements can be configured via a function call that takes a <code>context</code> element as input. This is a JavaScript object that contains several items related to the hovered point. We will explore the content of this object to extract the information we need later when customizing the tooltip content.</p>
<p>We modify our JS handler by including a fixed title (we could also have passed it as a parameter):</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb29-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> tooltip <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb29-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">callbacks</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb29-3">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">title</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> (context) {</span>
<span id="cb29-4">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tooltip title"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-5">    }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb29-6">  }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb29-7">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-8"></span>
<span id="cb29-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> plugins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb29-10">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">title</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb29-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">display</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb29-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mainTitle</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb29-13">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mainTitleColor</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb29-14">  }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb29-15">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> tooltip</span>
<span id="cb29-16">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Let‚Äôs see if it works:</p>
<p><img src="https://ymansiaux.github.io/yohann-data/posts/chartJS/img/12_tooltip_title.gif" width="80%"></p>
<p>The application code for this step is available here: https://github.com/ymansiaux/golemchartjs/tree/step9</p>
<p>Let‚Äôs proceed with customizing the tooltip content!</p>
<p>In this step, we will modify the <code>label</code> parameter in the <code>tooltip</code> object. To refine our code, we will use the <code>debugger</code> function, which we haven‚Äôt used so far! If you are familiar with using <code>browser()</code> in R, <code>debugger</code> is its JavaScript equivalent. It allows you to pause the code execution and open the browser console to explore the arguments passed to a function.</p>
<p>Let‚Äôs modify our handler:</p>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb30-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> tooltip <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb30-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">callbacks</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb30-3">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">title</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> (context) {</span>
<span id="cb30-4">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tooltip title"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-5">    }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb30-6">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(context) {</span>
<span id="cb30-7">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">debugger</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-8">    }</span>
<span id="cb30-9">  }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb30-10">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-11"></span>
<span id="cb30-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> plugins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb30-13">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">title</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb30-14">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">display</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb30-15">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mainTitle</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb30-16">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mainTitleColor</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb30-17">  }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb30-18">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> tooltip<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb30-19">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>We add a call to the JavaScript <code>debugger</code> in the <code>label</code> function of the <code>callbacks</code> object. We restart our application:</p>
<p><img src="https://ymansiaux.github.io/yohann-data/posts/chartJS/img/13_debugger.gif" width="80%"></p>
<p>When hovering over a point on the chart, code execution is paused and the browser console opens. We can then explore the content of the <code>context</code> object passed to the <code>label</code> function.</p>
<p>We can identify the information that will be useful:</p>
<ul>
<li><p>The row number in the dataset: <code>context.dataIndex</code></p></li>
<li><p>The values of the point: <code>context.formattedValue</code></p></li>
</ul>
<p>We can then construct a customized tooltip (remembering to remove the <code>debugger</code> call üòâ):</p>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb31-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> tooltip <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb31-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">callbacks</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb31-3">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">title</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> (context) {</span>
<span id="cb31-4">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tooltip title"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb31-5">    }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb31-6">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> (context) {</span>
<span id="cb31-7">      lab <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb31-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Line number: "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb31-9">        context<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dataIndex</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb31-10">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" values: "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb31-11">        context<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formattedValue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb31-12">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> lab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb31-13">      }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb31-14">  }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb31-15">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb31-16"></span>
<span id="cb31-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> plugins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb31-18">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">title</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb31-19">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">display</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb31-20">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mainTitle</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb31-21">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mainTitleColor</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb31-22">  }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb31-23">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> tooltip<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb31-24">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><img src="https://ymansiaux.github.io/yohann-data/posts/chartJS/img/14_final.gif" width="80%"></p>
<p>Mission accomplished! üöÄ</p>
<p>The code for this step is available here: <a href="https://github.com/ymansiaux/golemchartjs/tree/step10">https://github.com/ymansiaux/golemchartjs/tree/step10</a></p>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>After our initial foray into calling JavaScript code from R with the sweetalert2 library, we have now explored using a data visualization library.</p>
<p>Key takeaways:</p>
<ul>
<li>Always try to get the documentation examples working before adapting them to your application.</li>
<li>Use <code>jsonlite::toJSON()</code> to verify that the data passed is in the format expected by the library.</li>
<li>Keep in mind that sometimes you need to ‚Äúupdate‚Äù or ‚Äúdestroy‚Äù objects on a web page.</li>
<li>Use <code>console.log()</code> or <code>debugger</code> to see the contents of a JavaScript object passed as an argument to a function.</li>
</ul>
<p>After overcoming some challenging moments, we can see the possibilities offered by JavaScript data visualization libraries. You can achieve a high degree of customization for your charts, and Chart.js offers many features. Documentation, combined with research on discussion forums, can help solve problems that may seem insurmountable at first.</p>
<p>Feel free to dive into integrating JavaScript libraries into your <code>{shiny}</code> applications. It can be an excellent way to break new ground and offer interactive and customized charts to your users.</p>
<p>See you soon for new adventures! üöÄ</p>


</section>

 ]]></description>
  <category>shiny</category>
  <category>javascript</category>
  <category>R</category>
  <guid>https://ymansiaux.github.io/yohann-data/posts/chartJS/</guid>
  <pubDate>Mon, 02 Sep 2024 22:00:00 GMT</pubDate>
  <media:content url="https://ymansiaux.github.io/yohann-data/posts/chartJS/image.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Pimping your {shiny} app with a JavaScript library : an example using sweetalert2</title>
  <dc:creator>Yohann Mansiaux</dc:creator>
  <link>https://ymansiaux.github.io/yohann-data/posts/sweetalert2/</link>
  <description><![CDATA[ 





<p><strong>You think that some of the components of <code>{shiny}</code> are not very functional or downright austere? Are you looking to implement some feature in your app but it is not available in the <code>{shiny}</code> toolbox? Take a look at JavaScript!</strong></p>
<p>JavaScript is a very popular programming language that is often used to add features to web pages. With HTML and CSS, JavaScript is an essential language for web developers. The size of its user community means that if you are looking to implement a particular feature, there is a good chance that someone has already had the same need as you and has shared their code!</p>
<p>An other positive point (and essential for us in this case) : it is possible to integrate JavaScript libraries into a <code>{shiny}</code> application to add features that are not available by default. In addition to that, <code>{golem}</code> will help us to set everything up.</p>
<p>No more excuses to back down, let‚Äôs go ! üöÄ</p>
<section id="tldr" class="level2">
<h2 class="anchored" data-anchor-id="tldr">TL;DR</h2>
<ul>
<li>Going further in <code>{shiny}</code> by integrating a JavaScript library is possible!
<ul>
<li>We take the example of sweetalert2, which allows to display alerts that are more visually appealing than the basic ones</li>
<li><code>{golem}</code> has several functions to make it easier for us to integrate JavaScript libraries into a <code>{shiny}</code> app</li>
<li>This example is rather simple. The integration of libraries is sometimes harder because the documentation might be scarse or the library might be more complex to use</li>
</ul></li>
</ul>
</section>
<section id="import-sweetalert2-into-a-shiny-app-created-with-golem" class="level2">
<h2 class="anchored" data-anchor-id="import-sweetalert2-into-a-shiny-app-created-with-golem">Import sweetalert2 into a <code>{shiny}</code> app created with <code>{golem}</code></h2>
<section id="sweetalert2" class="level3">
<h3 class="anchored" data-anchor-id="sweetalert2">sweetalert2</h3>
<ul>
<li>sweetalert2 is a JavaScript library that allows you to display alerts that are more visually appealing than the basic ones</li>
<li>It is very well documented</li>
<li>It is very popular (more than 16000 ‚Äústars‚Äù on GitHub at the time of publication of this article)</li>
</ul>
<p>Let‚Äôs take a look at the possibilities offered by sweetalert2: https://sweetalert2.github.io/</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://ymansiaux.github.io/yohann-data/posts/sweetalert2/img/01-sweetalertaccueil.png" class="img-fluid figure-img" style="width:70.0%"></p>
</figure>
</div>
</div>
</div>
<p>If you click on ‚ÄúShow normal alert‚Äù, you will see a classic alert while clicking on ‚ÄúShow success message‚Äù, you will see a sweetalert2 alert.</p>
<p>The first one has a rather austere design while the second one is more modern and more pleasant to the eye, it will probably offer a better user experience.</p>
<p>Feel free to play with the different types of alerts offered by sweetalert2 to get an idea of what is possible with this library by visiting the <a href="https://sweetalert2.github.io/#examples" target="_blank">examples</a> section.</p>
</section>
<section id="add-the-necessary-dependencies-to-the-shiny-app" class="level3">
<h3 class="anchored" data-anchor-id="add-the-necessary-dependencies-to-the-shiny-app">Add the necessary dependencies to the <code>{shiny}</code> app</h3>
<p><strong>The following sections assume that you have already created a <code>{shiny}</code> app with <code>{golem}</code>.</strong></p>
<p>If this is not the case and you want to know more about <code>{golem}</code>, I invite you to consult the <a href="https://thinkr-open.github.io/golem/" target="_blank">official documentation</a>.</p>
<p>To add sweetalert2 to your <code>{shiny}</code> app, you will need to find a way to incorporate the files needed for its operation into your application.</p>
<p>Two solutions are available to you:</p>
<ul>
<li><p>Use a ‚ÄúCDN‚Äù (Content Delivery Network) to load the files from a third-party server. The CDN will be the equivalent of a CRAN for JavaScript libraries. Concretely, we will ask our application to point to the sources of sweetalert2, hosted on a remote server.</p></li>
<li><p>Download the files needed for its operation and integrate them directly into your application. If your application is intended to be used on a machine that is not connected to the Internet, you will inevitably have to go through this step.</p></li>
</ul>
<p><strong>Don‚Äôt panic! We will see both methods</strong></p>
<section id="where-to-find-the-elements-i-need" class="level4">
<h4 class="anchored" data-anchor-id="where-to-find-the-elements-i-need">Where to find the elements I need?</h4>
<p>The sweetalert2 documentation is very well done. You will find all the information you need to integrate the library into your application from the <a href="https://sweetalert2.github.io/#download" target="_blank">Download</a> section.</p>
<p>However, you will need to learn how to identify the elements you need to integrate sweetalert2 into your application.</p>
<p><strong>Looking for the CDN</strong></p>
<p>In the ‚ÄúDownload &amp; Install‚Äù section, you will find a link to the sweetalert2 CDN. This is the link that we will have to add to our application in order to use the library.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://ymansiaux.github.io/yohann-data/posts/sweetalert2/img/02-cdn.png" class="img-fluid figure-img" style="width:80.0%"></p>
</figure>
</div>
</div>
</div>
<p>When you click on the link, you will arrive on a page that looks like this:</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://ymansiaux.github.io/yohann-data/posts/sweetalert2/img/03-cdn_site.png" class="img-fluid figure-img" style="width:100.0%"></p>
</figure>
</div>
</div>
</div>
<p>What we are interested in here is the link in the <code>&lt;script&gt;</code> tag and the link in the <code>&lt;link&gt;</code> tag. The link to the file with the <code>.js</code> extension corresponds to the sweetalert2 JavaScript file. The link to the file with the <code>.css</code> extension corresponds to the sweetalert2 styles file.</p>
<p>Copy them and let‚Äôs go back to our app!</p>
</section>
<section id="method-1-add-dependencies-to-sweetalert2-via-the-cdn" class="level4">
<h4 class="anchored" data-anchor-id="method-1-add-dependencies-to-sweetalert2-via-the-cdn">Method 1: Add dependencies to sweetalert2 via the CDN</h4>
<p>Let‚Äôs open the <code>R/app_ui.R</code> file of our application and add the two links we copied earlier to the body of the <code>golem_add_external_resources()</code> function.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">golem_add_external_resources <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>() {</span>
<span id="cb1-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_resource_path</span>(</span>
<span id="cb1-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"www"</span>,</span>
<span id="cb1-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">app_sys</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"app/www"</span>)</span>
<span id="cb1-5">  )</span>
<span id="cb1-6"></span>
<span id="cb1-7">  tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(</span>
<span id="cb1-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">favicon</span>(),</span>
<span id="cb1-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bundle_resources</span>(</span>
<span id="cb1-10">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">path =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">app_sys</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"app/www"</span>),</span>
<span id="cb1-11">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">app_title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"golemsweetalert"</span></span>
<span id="cb1-12">    ),</span>
<span id="cb1-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sweetalert2</span></span>
<span id="cb1-14">    tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">script</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">src =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://cdn.jsdelivr.net/npm/sweetalert2@11.10.7/dist/sweetalert2.all.min.js"</span>),</span>
<span id="cb1-15">    tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">link</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">href =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://cdn.jsdelivr.net/npm/sweetalert2@11.10.7/dist/sweetalert2.min.css"</span>,</span>
<span id="cb1-16">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rel=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stylesheet"</span>)</span>
<span id="cb1-17"> </span>
<span id="cb1-18">  )</span>
<span id="cb1-19">}</span></code></pre></div>
<p>We find here a call to <code>tags$script</code> and a call to <code>tags$link</code> corresponding respectively to the <code>&lt;script&gt;</code> and <code>&lt;link&gt;</code> tags seen on the links provided by the CDN.</p>
<p>We copy-paste the elements being careful about the parameter names <code>src</code>, <code>href</code> and <code>rel</code> and remembering to separate them with commas. We are indeed moving from HTML code (where elements are separated by spaces) to R code.</p>
</section>
<section id="method-2-add-dependencies-to-sweetalert2-locally" class="level4">
<h4 class="anchored" data-anchor-id="method-2-add-dependencies-to-sweetalert2-locally">Method 2: Add dependencies to sweetalert2 locally</h4>
<p>The links identified earlier will also be useful to download the files needed to use sweetalert2.</p>
<p>The link to the JavaScript file will be passed to the <code>golem::use_external_js_file()</code> function while the link to the CSS file will be passed to the <code>golem::use_external_css_file()</code> function.</p>
<p>To keep a record of this, we will save the following commands in the <code>dev/02_dev.R</code> file in the ‚ÄúExternal resources‚Äù section.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">golem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use_external_js_file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://cdn.jsdelivr.net/npm/sweetalert2@11.10.7/dist/sweetalert2.all.min.js"</span>)</span>
<span id="cb2-2">golem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use_external_css_file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://cdn.jsdelivr.net/npm/sweetalert2@11.10.7/dist/sweetalert2.min.css"</span>)</span></code></pre></div>
<p>Both files are now present in the <code>inst/app/www</code> folder of our application project.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://ymansiaux.github.io/yohann-data/posts/sweetalert2/img/04-import_ok.png" class="img-fluid figure-img" style="width:70.0%"></p>
</figure>
</div>
</div>
</div>
<p>Everything is ok, we can continue our journey üëç.</p>
</section>
</section>
<section id="how-to-know-if-sweetalert2-is-correctly-imported-into-my-shiny-app" class="level3">
<h3 class="anchored" data-anchor-id="how-to-know-if-sweetalert2-is-correctly-imported-into-my-shiny-app">How to know if sweetalert2 is correctly imported into my {shiny} app?</h3>
<p>To check that sweetalert2 is correctly imported into our application, we open our browser and then the development console.</p>
<p>Before that, let‚Äôs launch our app with <code>golem::run_dev()</code>!</p>
<p><strong>NB: The following screenshots were taken with the Google Chrome browser.</strong></p>
<p>On the window of our application, we right-click and select ‚ÄúInspect‚Äù. In the new window that opens, we choose the ‚ÄúConsole‚Äù tab and then type the command <code>Swal.fire("Hello sweetalert2!")</code>. This console allows us to execute JavaScript code, which will be interpreted by our browser.</p>
<p>If everything went well, we should see a sweetalert2 alert appear! Otherwise, we might have an error message in red (which we will have to learn to decipher, as with an R console :-)).</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://ymansiaux.github.io/yohann-data/posts/sweetalert2/img/05-console_js.png" class="img-fluid figure-img" style="width:80.0%"></p>
</figure>
</div>
</div>
</div>
<p>It works! üéâ</p>
<section id="how-did-i-know-i-had-to-type-swal.fire-...." class="level4">
<h4 class="anchored" data-anchor-id="how-did-i-know-i-had-to-type-swal.fire-....">How did I know I had to type <code>Swal.fire(" .... ")</code>?</h4>
<p>Thanks to the documentation! By going to the sweetalert2 page, we find many examples of using the library. In this case, to display an alert, you have to use the <code>Swal.fire()</code> function. As for learning a new R package, we see that documentation (when it exists ‚Ä¶) is of paramount importance for the handling of JavaScript libraries.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://ymansiaux.github.io/yohann-data/posts/sweetalert2/img/06_swal_fire.png" class="img-fluid figure-img" style="width:80.0%"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
</section>
<section id="create-a-sweetalert2-alert-in-our-shiny-app" class="level2">
<h2 class="anchored" data-anchor-id="create-a-sweetalert2-alert-in-our-shiny-app">Create a sweetalert2 alert in our {shiny} app</h2>
<p>Now that we have imported sweetalert2 into our application and checked that the import went well, we are going to create a function that will allow us to call sweetalert2 from our application.</p>
<p>We are going to try to incorporate the ‚ÄúA title with a text under‚Äù alert into our application.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://ymansiaux.github.io/yohann-data/posts/sweetalert2/img/07_exemple_alert1.png" class="img-fluid figure-img" style="width:80.0%"></p>
</figure>
</div>
</div>
</div>
<p>Three elements can be set here: - The title of the alert - The text of the alert - The type of alert (success, error, warning, info, question) and its associated icon</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://ymansiaux.github.io/yohann-data/posts/sweetalert2/img/08_exemple_alert2.png" class="img-fluid figure-img" style="width:60.0%"></p>
</figure>
</div>
</div>
</div>
<p>We can easily imagine how to modify these elements directly in the JavaScript code but we don‚Äôt know yet how to create this alert via R code. Let‚Äôs go!</p>
<section id="create-a-javascript-file-to-call-sweetalert2" class="level3">
<h3 class="anchored" data-anchor-id="create-a-javascript-file-to-call-sweetalert2">Create a JavaScript file to call sweetalert2</h3>
<p>In order to call sweetalert2 from our application, we are going to create a JavaScript file in which we will write a function that will allow us to create an alert.</p>
<p>Let‚Äôs create a <code>inst/app/www/sweet_alert.js</code> file in which we will paste the code to create the alert selected earlier. We could have created this file manually, but we will take advantage of the features offered by <code>{golem}</code> to do so.</p>
<p>Let‚Äôs go to the <code>dev/02_dev.R</code> file! We add the following line in the ‚ÄúExternal Resources‚Äù section:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">golem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_js_handler</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sweet_alert"</span>)</span></code></pre></div>
<p>The file name doesn‚Äôt matter, but it is important to respect the <code>.js</code> extension so that the file is correctly interpreted as JavaScript code. We could have also created subfolders if we had had many imports and files to manage. The only prerequisite is that everything is located in the <code>inst/app/www</code> directory.</p>
<p>We obtain a slightly strange skeleton, which will in fact be the skeleton of a JavaScript function, usable in our <code>{shiny}</code> application:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>( document )<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.ready</span>(<span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>() {</span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Shiny.addCustomMessageHandler</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fun'</span>, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(arg) {</span>
<span id="cb4-3"> </span>
<span id="cb4-4">  })</span>
<span id="cb4-5">});</span></code></pre></div>
<p>We are going to substitute the term <code>'fun'</code> with the name of the function we want to call in our <code>{shiny}</code> application and add the code to create the sweetalert2 alert.</p>
<p>We therefore obtain the following code:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>( document )<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.ready</span>(<span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>() {</span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Shiny.addCustomMessageHandler</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alert_title_and_text_under'</span>, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(arg) {</span>
<span id="cb5-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Swal.fire</span>({</span>
<span id="cb5-4">      title<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The Internet?"</span>,</span>
<span id="cb5-5">      text<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"That thing is still around?"</span>,</span>
<span id="cb5-6">      icon<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"question"</span></span>
<span id="cb5-7">    });</span>
<span id="cb5-8">  })</span>
<span id="cb5-9">});</span></code></pre></div>
<p>Our parameters ‚Äútitle‚Äù, ‚Äútext‚Äù and ‚Äúicon‚Äù are fixed, we need to find a way to make them vary according to the choices of the user. We can notice the existence of a ‚Äúarg‚Äù parameter in the <code>Shiny.addCustomMessageHandler()</code> function. It is this parameter that will allow us to transmit information to our JavaScript function.</p>
<p>Let‚Äôs modify our code:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>( document )<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.ready</span>(<span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>() {</span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Shiny.addCustomMessageHandler</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alert_title_and_text_under'</span>, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(arg) {</span>
<span id="cb6-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Swal.fire</span>({</span>
<span id="cb6-4">      title<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg.title,</span>
<span id="cb6-5">      text<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg.text,</span>
<span id="cb6-6">      icon<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> arg.icon</span>
<span id="cb6-7">    });</span>
<span id="cb6-8">  })</span>
<span id="cb6-9">});</span></code></pre></div>
<p>The notation to use here will be <code>arg.parameter_name</code> to access the values transmitted by our <code>{shiny}</code> application. The notation with the ‚Äú.‚Äù is a JavaScript convention for accessing object properties. To make the parallel with R, it‚Äôs a bit like if we were doing <code>arg$parameter_name</code>.</p>
<p>Our JavaScript code is ready! Let‚Äôs move back to the R side!</p>
</section>
<section id="what-if-we-tested-all-this-in-our-shiny-app-finally" class="level3">
<h3 class="anchored" data-anchor-id="what-if-we-tested-all-this-in-our-shiny-app-finally">What if we tested all this in our <code>{shiny}</code> app (FINALLY!)?</h3>
<p>We are going to add a button in the <code>R/app_ui.R</code> file:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">app_ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(request) {</span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tagList</span>(</span>
<span id="cb7-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Leave this function for adding external resources</span></span>
<span id="cb7-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">golem_add_external_resources</span>(),</span>
<span id="cb7-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Your application UI logic</span></span>
<span id="cb7-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb7-7">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">h1</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"golemsweetalert"</span>),</span>
<span id="cb7-8">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inputId =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"show_alert"</span>,</span>
<span id="cb7-9">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alert demo"</span>)</span>
<span id="cb7-10">    )</span>
<span id="cb7-11">  )</span>
<span id="cb7-12">}</span></code></pre></div>
<p>On the server side, we add an <code>observeEvent()</code> in the <code>R/app_server.R</code> file, which will call our JavaScript function to generate an alert when the user clicks on the ‚ÄúAlert demo‚Äù button.</p>
<p>Once more, <code>{golem}</code> will make our life easier! We will use the <code>golem::invoke_js()</code> function to call our JavaScript function.</p>
<p>Two parameters are passed to <code>golem::invoke_js()</code>:</p>
<ul>
<li>the first parameter corresponds to the name of the JavaScript function to call</li>
<li>the second parameter corresponds to a list of parameters, the JavaScript equivalent of our <code>arg</code> object which will be used to transmit the information necessary to create the sweetalert2 alert. The names used in the list here must correspond to the names used in the JavaScript function for the <code>arg</code> parameter (‚Äútitle‚Äù, ‚Äútext‚Äù and ‚Äúicon‚Äù).</li>
</ul>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">app_server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output, session) {</span>
<span id="cb8-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Your application server logic</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observeEvent</span>(</span>
<span id="cb8-4">    input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>show_alert,{</span>
<span id="cb8-5">      golem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">invoke_js</span>(</span>
<span id="cb8-6">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alert_title_and_text_under"</span>,</span>
<span id="cb8-7">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb8-8">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Title"</span>,</span>
<span id="cb8-9">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Text"</span>,</span>
<span id="cb8-10">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">icon =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"success"</span></span>
<span id="cb8-11">        ))</span>
<span id="cb8-12">    }</span>
<span id="cb8-13">  )</span>
<span id="cb8-14">}</span></code></pre></div>
<p>We run a call to <code>golem::run_dev()</code> to see our application in action!</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://ymansiaux.github.io/yohann-data/posts/sweetalert2/img/09_demo.gif" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Congratulations! üëè</p>
<p>To make everything more elegant, we can create an R function that will call <code>golem::invoke_js()</code>.</p>
</section>
<section id="create-an-r-function-to-call-sweetalert2" class="level3">
<h3 class="anchored" data-anchor-id="create-an-r-function-to-call-sweetalert2">Create an R function to call sweetalert2</h3>
<p>We are going to go through <code>{golem}</code> to create our function. To do this, we will add the following line in the <code>dev/02_dev.R</code> file of our application:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">golem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_fct</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"create_alert_title_and_text_under"</span>)</span></code></pre></div>
<p>We obtain a <code>R/fct_create_alert_title_and_text_under.R</code> file in which we will be able to write our function, which will call the JavaScript code created in the previous step.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' create_alert_title_and_text_under</span></span>
<span id="cb10-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#'</span></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @description Creates an alert with a title, a text and an icon</span></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @param title alert title</span></span>
<span id="cb10-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @param text alert text</span></span>
<span id="cb10-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @param icon alert icon</span></span>
<span id="cb10-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @return side effect : creates an alert</span></span>
<span id="cb10-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#'</span></span>
<span id="cb10-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @noRd</span></span>
<span id="cb10-10">create_alert_title_and_text_under <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(</span>
<span id="cb10-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Title"</span>,</span>
<span id="cb10-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Text"</span>,</span>
<span id="cb10-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">icon =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"success"</span></span>
<span id="cb10-14">    ) {</span>
<span id="cb10-15">  golem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">invoke_js</span>(</span>
<span id="cb10-16">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alert_title_and_text_under"</span>,</span>
<span id="cb10-17">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb10-18">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> title,</span>
<span id="cb10-19">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> text,</span>
<span id="cb10-20">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">icon =</span> icon</span>
<span id="cb10-21">    )</span>
<span id="cb10-22">  )</span>
<span id="cb10-23">}</span></code></pre></div>
<p>Let‚Äôs modify both the <code>R/app_ui.R</code> and <code>R/app_server.R</code> files to be able to define the parameters of our alert through choices made by the user.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">app_ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(request) {</span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tagList</span>(</span>
<span id="cb11-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Leave this function for adding external resources</span></span>
<span id="cb11-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">golem_add_external_resources</span>(),</span>
<span id="cb11-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Your application UI logic</span></span>
<span id="cb11-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb11-7">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">h1</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"golemsweetalert"</span>),</span>
<span id="cb11-8">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textInput</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inputId =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>,</span>
<span id="cb11-9">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>),</span>
<span id="cb11-10">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textInput</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inputId =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>,</span>
<span id="cb11-11">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>),</span>
<span id="cb11-12">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">radioButtons</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inputId =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"icon"</span>,</span>
<span id="cb11-13">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"icon"</span>,</span>
<span id="cb11-14">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">choices =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"warning"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"success"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"info"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"question"</span>)),</span>
<span id="cb11-15">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inputId =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"show_alert"</span>,</span>
<span id="cb11-16">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alert demo"</span>)</span>
<span id="cb11-17">    )</span>
<span id="cb11-18">  )</span>
<span id="cb11-19">}</span></code></pre></div>
<p>To define the list of possible ‚Äúchoices‚Äù for the <code>radioButtons</code>, we took the possible values for the <code>icon</code> parameter of sweetalert2, as indicated in the official documentation: https://sweetalert2.github.io/#icon.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">app_server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output, session) {</span>
<span id="cb12-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Your application server logic</span></span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observeEvent</span>(</span>
<span id="cb12-4">    input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>show_alert,{</span>
<span id="cb12-5">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_alert_title_and_text_under</span>(</span>
<span id="cb12-6">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>title,</span>
<span id="cb12-7">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>text,</span>
<span id="cb12-8">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">icon =</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>icon</span>
<span id="cb12-9">      )</span>
<span id="cb12-10">    }</span>
<span id="cb12-11">  )</span>
<span id="cb12-12">}</span></code></pre></div>
<p>Let‚Äôs finally call <code>golem::run_dev()</code>!</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://ymansiaux.github.io/yohann-data/posts/sweetalert2/img/10_demo2.gif" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Bravo ! üëè</p>
</section>
</section>
<section id="and-a-more-complex-example" class="level2">
<h2 class="anchored" data-anchor-id="and-a-more-complex-example">And a more complex example?</h2>
<p>Following the previous steps, it is relatively easy to add additional elements to an alert, such as an image or confirmation / cancellation buttons. A slightly deeper dive into the sweetalert2 documentation will help you understand how to add these elements.</p>
<p>Let‚Äôs see what is possible to achieve:</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://ymansiaux.github.io/yohann-data/posts/sweetalert2/img/11_demo3.gif" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>You are curious to know more? Go to <a href="https://github.com/ymansiaux/golemsweetalert" target="_blank">this project source code</a>.</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<ul>
<li>Integrating JavaScript libraries into a {shiny} application is possible!</li>
<li><code>{golem}</code> makes it easier for us</li>
<li>It is quite easy when the library is well documented</li>
<li>It is important to read the documentation of the library you want to integrate (but this is also true in R!)</li>
<li>The browser inspector is a very useful tool to check that everything is going well</li>
<li>To integrate more complex libraries, minimal JavaScript skills will probably be required</li>
</ul>
<p>If you want more examples of the use of sweetalert2, but also other JavaScript libraries (<a href="https://gridjs.io/" target="_blank">Grid.js</a> and <a href="https://www.chartjs.org/" target="_blank">Chart.js</a>), you can consult the <a href="https://connect.thinkr.fr/mycomicslibrary/" target="_blank">mycomicslibrary</a> application and take a look at <a href="https://github.com/ymansiaux/mycomicslibrary" target="_blank">its source code</a>.</p>
<p>Thanks for reading this tutorial and have fun in the wonderful world of JavaScript! üöÄ</p>


</section>

 ]]></description>
  <category>shiny</category>
  <category>javascript</category>
  <category>R</category>
  <guid>https://ymansiaux.github.io/yohann-data/posts/sweetalert2/</guid>
  <pubDate>Mon, 29 Apr 2024 22:00:00 GMT</pubDate>
  <media:content url="https://ymansiaux.github.io/yohann-data/posts/sweetalert2/image.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
